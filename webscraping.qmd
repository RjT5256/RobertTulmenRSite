---
title: "Web Scraping"
---
Steam charts is a cool place to gather data on which games are the most popular amongst the steam population, which is one of the biggest platforms used by gamers. This code uses the base url of steam charts with minor modifications to go through the first 10 pages using a loop with the XPath from the HTML code.
```{r}
#| echo: false
#| warning: false
## Workshop: Scraping webpages with R rvest package
# Prerequisites: Chrome browser, Selector Gadget (https://selectorgadget.com/)

library(tidyverse)
library(rvest)
library(purrr)

# ## Get the XPath data using Inspect element feature in Safari, Chrome or Firefox
# ## At Inspect tab, look for <table class=....> tag. Leave the table close
# ## Right click the table and Copy XPath, paste at html_nodes(xpath =)
PAGES_TO_SCRAPE <- 10
base_url <- 'https://steamcharts.com/top/p.'

#Reading the HTML code from the SteamCharts Website
chartInfo <- 1:PAGES_TO_SCRAPE %>%
  map_dfr(~ {
    # Pause for 1 second between requests
    Sys.sleep(1)

    # a) Construct the specific URL for the current page number (.x)
    current_url <- paste0(base_url, .x)

    # b) Read the page and scrape the table using your established XPath
    page_data <- read_html(current_url) %>%
      html_nodes(xpath='//*[@id="top-games"]') %>%
      html_table()

    # The table data is the first element in the list
    table_df <- page_data[[1]]
    colnames(table_df)[1] <- "Rank"

    # c) Add a column to track the page
    table_df <- table_df %>%
      mutate(Page = .x)

    return(table_df)
  })

head(chartInfo)
# steamcharts <- read_html(url)
# class(steamcharts)

# steam <- steamcharts %>%
#   html_nodes(xpath='//*[@id="top-games"]') %>%
#   html_table()
# class(steam)
# chartInfo = steam[[1]]
# 
# head(chartInfo$Name, n=10)

## Clean up variables
## What type is Rank?
## How about Date? How to fix it?
# Remove "trailing notes in Date variable 'Last 30 days' column

print(paste("Total rows scraped:", nrow(chartInfo)))
colnames(chartInfo) <- c("Rank", "Name", "Current Players", "Last 30 Days", "Peak Players", "Hours Played", "Page")
chartInfo <- chartInfo %>%
  select(-"Last 30 Days")
print(chartInfo)
write.csv(chartInfo, "chartInfo.csv", row.names = FALSE)
```