# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_poverty)) |>
select(NAME, estimate_poverty, moe_poverty) |>
slice_head(n = 10)
bottom10 <- acs_wide |>
arrange(estimate_poverty) |>
select(NAME, estimate_poverty, moe_poverty) |>
slice_head(n = 10)
View(acs)
View(acs_wide)
View(vars)
View(top10)
library(tidycensus)
library(ggplot2)
library(tidyverse)
library(tigris)
library(sf)
library(dplyr)
library(readr)
census_api_key("a310026cfc25bf81421c3505e3f2862d3c711e99", install = TRUE)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B19", name)) |> dplyr::slice_head(n = 10)
View(vars)
# 3) Parameters (EDIT ME)
state_abbr <- "TX"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(income = "B19013_001", poverty = "B17001_002")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
View(acs)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B19", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(income = "B19013_001", poverty = "B17001_002")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_poverty)) |>
select(NAME, estimate_poverty, moe_poverty) |>
slice_head(n = 10)
bottom10 <- acs_wide |>
arrange(estimate_poverty) |>
select(NAME, estimate_poverty, moe_poverty) |>
slice_head(n = 10)
View(bottom10)
View(bottom10)
View(top10)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
View(vars)
my_vars    <- c(income = "C24010A_001", poverty = "B17001_002")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
my_vars    <- c(income = "B28010_001", poverty = "B17001_002")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_poverty)) |>
select(NAME, estimate_poverty, moe_poverty) |>
slice_head(n = 10)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(income = "B28010_001", poverty = "B17001_002")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Median HH Income") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
View(acs)
View(acs)
View(acs_wide)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(Device = "B28010_001", MedianHHI = "B19019_001")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_income), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
library(tidycensus)
library(ggplot2)
library(tidyverse)
library(tigris)
library(sf)
library(dplyr)
library(readr)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(Device = "B28010_001", MedianHHI = "B19019_001")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
geom_sf()?
s
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = "plasma") +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = "C") +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = C) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = Plasma) +
scale_fill_viridis_c(name = "Types of Computers in Household") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_MedianHHI), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Median HH Income — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# View a few example codes
vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
d
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Tech Aggregation — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
library(tidycensus)
library(ggplot2)
library(tidyverse)
library(tigris)
library(sf)
library(dplyr)
library(readr)
census_api_key("a310026cfc25bf81421c3505e3f2862d3c711e99", install = TRUE)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(Device = "B28010_001", MedianHHI = "B19019_001")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Tech Aggregation — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_MedianHHI)) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
bottom10 <- acs_wide |>
arrange(estimate_MedianHHI) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
View(bottom10)
View(top10)
library(tidycensus)
library(ggplot2)
library(tidyverse)
library(tigris)
library(sf)
library(dplyr)
library(readr)
census_api_key("a310026cfc25bf81421c3505e3f2862d3c711e99", install = FALSE)
# 2) Explore variables
vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(Device = "B28010_001", MedianHHI = "B19019_001")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Tech Aggregation — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_MedianHHI)) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
bottom10 <- acs_wide |>
arrange(estimate_MedianHHI) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
print(top10)
print(bottom10)
library(tidycensus)
library(ggplot2)
library(tidyverse)
library(tigris)
library(sf)
library(dplyr)
library(readr)
# census_api_key("a310026cfc25bf81421c3505e3f2862d3c711e99", install = FALSE)
# 2) Explore variables
# vars <- load_variables(2023, "acs5", cache = TRUE)
# View a few example codes
# vars |> dplyr::filter(grepl("^B28", name)) |> dplyr::slice_head(n = 10)
# 3) Parameters (EDIT ME)
state_abbr <- "CA"
geo_level  <- "county"   # options: state, county, tract, block group
my_vars    <- c(Device = "B28010_001", MedianHHI = "B19019_001")
year_acs   <- 2023
survey     <- "acs5"
# 4) Download
acs <- get_acs(
geography = geo_level,
variables = my_vars,
state = state_abbr,
year = year_acs,
survey = survey,
geometry = TRUE,
progress_bar = FALSE
)
# 5) Wide format for convenience
acs_wide <- acs |>
tidyr::pivot_wider(
id_cols = c(GEOID, NAME, geometry),
names_from = variable,
values_from = c(estimate, moe)
)
# 6) Map (edit titles/theme)
ggplot(acs_wide) +
geom_sf(aes(fill = estimate_Device), color = NA) +
scale_fill_viridis_c(name = "Types of Computers in Household", option = "plasma") +
labs(title = paste0("ACS ", year_acs, " 5-year: Tech Aggregation — ", state_abbr, " (", geo_level, ")"),
caption = "Source: U.S. Census Bureau via tidycensus") +
theme_minimal()
# 7) Table (top/bottom by poverty count)
top10 <- acs_wide |>
arrange(desc(estimate_MedianHHI)) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
print(top10)
bottom10 <- acs_wide |>
arrange(estimate_MedianHHI) |>
select(NAME, estimate_MedianHHI, moe_MedianHHI) |>
slice_head(n = 10)
print(bottom10)
